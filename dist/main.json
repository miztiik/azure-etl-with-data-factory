{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.18.4.5664",
      "templateHash": "15674731620612005332"
    }
  },
  "parameters": {
    "deploymentParams": {
      "type": "object"
    },
    "identityParams": {
      "type": "object"
    },
    "storageAccountParams": {
      "type": "object"
    },
    "logAnalyticsWorkspaceParams": {
      "type": "object"
    },
    "funcParams": {
      "type": "object"
    },
    "serviceBusParams": {
      "type": "object"
    },
    "cosmosDbParams": {
      "type": "object"
    },
    "data_factory_params": {
      "type": "object"
    },
    "brandTags": {
      "type": "object"
    },
    "dateNow": {
      "type": "string",
      "defaultValue": "[utcNow('yyyy-MM-dd-hh-mm')]"
    },
    "tags": {
      "type": "object",
      "defaultValue": "[union(parameters('brandTags'), createObject('last_deployed', parameters('dateNow')))]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}_{1}_{2}_uami', parameters('deploymentParams').enterprise_name_suffix, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness)]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentParams": {
            "value": "[parameters('deploymentParams')]"
          },
          "identityParams": {
            "value": "[parameters('identityParams')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.18.4.5664",
              "templateHash": "15179722866606126009"
            }
          },
          "parameters": {
            "module_metadata": {
              "type": "object",
              "defaultValue": {
                "module_last_updated": "2023-06-05",
                "owner": "miztiik@github"
              }
            },
            "deploymentParams": {
              "type": "object"
            },
            "identityParams": {
              "type": "object"
            },
            "tags": {
              "type": "object"
            }
          },
          "variables": {
            "_prebaked_uami_name_prefix": "[format('{0}_{1}_{2}', parameters('identityParams').namePrefix, parameters('deploymentParams').enterprise_name_suffix, parameters('deploymentParams').global_uniqueness)]"
          },
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2023-01-31",
              "name": "[format('{0}_vm', variables('_prebaked_uami_name_prefix'))]",
              "location": "[parameters('deploymentParams').location]",
              "tags": "[parameters('tags')]",
              "metadata": {
                "description": "Create User-Assigned Managed Identity - For VMs"
              }
            },
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2023-01-31",
              "name": "[format('{0}_func', variables('_prebaked_uami_name_prefix'))]",
              "location": "[parameters('deploymentParams').location]",
              "tags": "[parameters('tags')]",
              "metadata": {
                "description": "Create User-Assigned Managed Identity - For Functions"
              }
            },
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2023-01-31",
              "name": "[format('{0}_data_factory', variables('_prebaked_uami_name_prefix'))]",
              "location": "[parameters('deploymentParams').location]",
              "tags": "[parameters('tags')]",
              "metadata": {
                "description": "Create User-Assigned Managed Identity - For Data Factory"
              }
            }
          ],
          "outputs": {
            "module_metadata": {
              "type": "object",
              "value": "[parameters('module_metadata')]"
            },
            "uami_name_vm": {
              "type": "string",
              "value": "[format('{0}_vm', variables('_prebaked_uami_name_prefix'))]"
            },
            "uami_name_func": {
              "type": "string",
              "value": "[format('{0}_func', variables('_prebaked_uami_name_prefix'))]"
            },
            "uami_data_factory": {
              "type": "string",
              "value": "[format('{0}_data_factory', variables('_prebaked_uami_name_prefix'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}_{1}_{2}_cosmos_db', parameters('cosmosDbParams').cosmosDbNamePrefix, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness)]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentParams": {
            "value": "[parameters('deploymentParams')]"
          },
          "cosmosDbParams": {
            "value": "[parameters('cosmosDbParams')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.18.4.5664",
              "templateHash": "939944078024847240"
            }
          },
          "parameters": {
            "module_metadata": {
              "type": "object",
              "defaultValue": {
                "module_last_updated": "2023-05-29",
                "owner": "miztiik@github"
              }
            },
            "deploymentParams": {
              "type": "object"
            },
            "tags": {
              "type": "object"
            },
            "cosmosDbParams": {
              "type": "object"
            }
          },
          "variables": {
            "cosmos_db_accnt_name": "[replace(format('{0}-{1}-db-account-{2}', parameters('deploymentParams').enterprise_name_suffix, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness), '_', '-')]",
            "databaseName": "[format('{0}-db-{1}', parameters('cosmosDbParams').cosmosDbNamePrefix, parameters('deploymentParams').global_uniqueness)]",
            "containerName": "[format('{0}-container-{1}', parameters('cosmosDbParams').cosmosDbNamePrefix, parameters('deploymentParams').global_uniqueness)]"
          },
          "resources": [
            {
              "type": "Microsoft.DocumentDB/databaseAccounts",
              "apiVersion": "2022-08-15",
              "name": "[variables('cosmos_db_accnt_name')]",
              "location": "[parameters('deploymentParams').location]",
              "kind": "GlobalDocumentDB",
              "tags": "[parameters('tags')]",
              "properties": {
                "publicNetworkAccess": "Enabled",
                "databaseAccountOfferType": "Standard",
                "enableAutomaticFailover": true,
                "consistencyPolicy": {
                  "defaultConsistencyLevel": "Session"
                },
                "locations": [
                  {
                    "locationName": "[parameters('deploymentParams').location]",
                    "isZoneRedundant": false
                  }
                ],
                "backupPolicy": {
                  "type": "Continuous"
                },
                "capabilities": [
                  {
                    "name": "EnableServerless"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
              "apiVersion": "2021-06-15",
              "name": "[format('{0}/{1}', variables('cosmos_db_accnt_name'), variables('databaseName'))]",
              "properties": {
                "resource": {
                  "id": "[variables('databaseName')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmos_db_accnt_name'))]"
              ]
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
              "apiVersion": "2022-08-15",
              "name": "[format('{0}/{1}/{2}', variables('cosmos_db_accnt_name'), variables('databaseName'), variables('containerName'))]",
              "properties": {
                "resource": {
                  "id": "[variables('containerName')]",
                  "partitionKey": {
                    "paths": [
                      "/id"
                    ],
                    "kind": "Hash"
                  },
                  "indexingPolicy": {
                    "indexingMode": "consistent",
                    "includedPaths": [
                      {
                        "path": "/*"
                      }
                    ],
                    "excludedPaths": [
                      {
                        "path": "/_etag/?"
                      }
                    ]
                  },
                  "conflictResolutionPolicy": {
                    "mode": "LastWriterWins",
                    "conflictResolutionPath": "/_ts"
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmos_db_accnt_name'), variables('databaseName'))]"
              ]
            }
          ],
          "outputs": {
            "module_metadata": {
              "type": "object",
              "value": "[parameters('module_metadata')]"
            },
            "cosmos_db_accnt_name": {
              "type": "string",
              "value": "[variables('cosmos_db_accnt_name')]"
            },
            "cosmos_db_name": {
              "type": "string",
              "value": "[variables('databaseName')]"
            },
            "cosmos_db_container_name": {
              "type": "string",
              "value": "[variables('containerName')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}_{1}_{2}_la', parameters('logAnalyticsWorkspaceParams').workspaceName, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness)]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentParams": {
            "value": "[parameters('deploymentParams')]"
          },
          "logAnalyticsWorkspaceParams": {
            "value": "[parameters('logAnalyticsWorkspaceParams')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.18.4.5664",
              "templateHash": "3211974735333040787"
            }
          },
          "parameters": {
            "module_metadata": {
              "type": "object",
              "defaultValue": {
                "module_last_updated": "2023-05-21",
                "owner": "miztiik@github"
              }
            },
            "deploymentParams": {
              "type": "object"
            },
            "logAnalyticsWorkspaceParams": {
              "type": "object"
            },
            "tags": {
              "type": "object"
            }
          },
          "resources": [
            {
              "condition": "[equals(parameters('logAnalyticsWorkspaceParams').commitTier, false())]",
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2020-08-01",
              "name": "[format('{0}-{1}-payGTier-{2}', parameters('logAnalyticsWorkspaceParams').workspaceName, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness)]",
              "location": "[parameters('deploymentParams').location]",
              "tags": "[parameters('tags')]",
              "properties": {
                "retentionInDays": "[parameters('logAnalyticsWorkspaceParams').retentionInDays]",
                "sku": {
                  "name": "PerGB2018"
                },
                "workspaceCapping": {
                  "dailyQuotaGb": "[parameters('logAnalyticsWorkspaceParams').dailyQuotaGb]"
                },
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
              }
            },
            {
              "condition": "[equals(parameters('logAnalyticsWorkspaceParams').commitTier, true())]",
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2022-10-01",
              "name": "[format('{0}-{1}-commitTier-{2}', parameters('logAnalyticsWorkspaceParams').workspaceName, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness)]",
              "location": "[parameters('deploymentParams').location]",
              "tags": "[parameters('tags')]",
              "properties": {
                "sku": {
                  "name": "CapacityReservation",
                  "capacityReservationLevel": 100
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/tables",
              "apiVersion": "2022-10-01",
              "name": "[format('{0}/{1}', format('{0}-{1}-payGTier-{2}', parameters('logAnalyticsWorkspaceParams').workspaceName, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness), format('{0}{1}_CL', parameters('logAnalyticsWorkspaceParams').storeEventsCustomTableName, parameters('deploymentParams').global_uniqueness))]",
              "properties": {
                "plan": "Analytics",
                "retentionInDays": -1,
                "schema": {
                  "description": "Store order events custom table",
                  "displayName": "DOESNT-SEEM-TO-WORK-STORE-EVENTS-0",
                  "name": "[format('{0}{1}_CL', parameters('logAnalyticsWorkspaceParams').storeEventsCustomTableName, parameters('deploymentParams').global_uniqueness)]",
                  "columns": [
                    {
                      "name": "TimeGenerated",
                      "type": "datetime"
                    },
                    {
                      "name": "RawData",
                      "type": "string"
                    },
                    {
                      "name": "request_id",
                      "type": "string"
                    },
                    {
                      "name": "event_type",
                      "type": "string"
                    },
                    {
                      "name": "store_id",
                      "displayName": "store_id",
                      "description": "The Id of the store placing the Order",
                      "type": "int"
                    },
                    {
                      "name": "cust_id",
                      "type": "int"
                    },
                    {
                      "name": "category",
                      "type": "string"
                    },
                    {
                      "name": "sku",
                      "type": "int"
                    },
                    {
                      "name": "price",
                      "type": "real"
                    },
                    {
                      "name": "qty",
                      "type": "int"
                    },
                    {
                      "name": "discount",
                      "type": "real"
                    },
                    {
                      "name": "gift_wrap",
                      "type": "boolean"
                    },
                    {
                      "name": "variant",
                      "description": "Product Variety",
                      "type": "string"
                    },
                    {
                      "name": "priority_shipping",
                      "description": "Priority Shipping requested",
                      "type": "boolean"
                    },
                    {
                      "name": "contact_me",
                      "description": "Miztiik Automation Brand Experience Store",
                      "displayName": "contact_me",
                      "type": "string"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', format('{0}-{1}-payGTier-{2}', parameters('logAnalyticsWorkspaceParams').workspaceName, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness))]"
              ]
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/tables",
              "apiVersion": "2022-10-01",
              "name": "[format('{0}/{1}', format('{0}-{1}-payGTier-{2}', parameters('logAnalyticsWorkspaceParams').workspaceName, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness), format('{0}{1}_CL', parameters('logAnalyticsWorkspaceParams').automationEventsCustomTableName, parameters('deploymentParams').global_uniqueness))]",
              "properties": {
                "plan": "Analytics",
                "retentionInDays": -1,
                "schema": {
                  "description": "Miztiik Automation Events",
                  "displayName": "DOESNT-SEEM-TO-WORK-AUTOMATION-EVENTS-1",
                  "name": "[format('{0}{1}_CL', parameters('logAnalyticsWorkspaceParams').automationEventsCustomTableName, parameters('deploymentParams').global_uniqueness)]",
                  "columns": [
                    {
                      "name": "TimeGenerated",
                      "type": "datetime"
                    },
                    {
                      "name": "RawData",
                      "type": "string"
                    },
                    {
                      "name": "request_id",
                      "type": "string"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', format('{0}-{1}-payGTier-{2}', parameters('logAnalyticsWorkspaceParams').workspaceName, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness))]"
              ]
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/tables",
              "apiVersion": "2022-10-01",
              "name": "[format('{0}/{1}', format('{0}-{1}-payGTier-{2}', parameters('logAnalyticsWorkspaceParams').workspaceName, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness), format('{0}{1}_CL', parameters('logAnalyticsWorkspaceParams').managedRunCmdCustomTableName, parameters('deploymentParams').global_uniqueness))]",
              "properties": {
                "plan": "Analytics",
                "retentionInDays": -1,
                "schema": {
                  "description": "Miztiik Run Command Automation Events",
                  "displayName": "DOESNT-SEEM-TO-WORK-AUTOMATION-EVENTS-2",
                  "name": "[format('{0}{1}_CL', parameters('logAnalyticsWorkspaceParams').managedRunCmdCustomTableName, parameters('deploymentParams').global_uniqueness)]",
                  "columns": [
                    {
                      "name": "TimeGenerated",
                      "type": "datetime"
                    },
                    {
                      "name": "RawData",
                      "type": "string"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', format('{0}-{1}-payGTier-{2}', parameters('logAnalyticsWorkspaceParams').workspaceName, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness))]"
              ]
            }
          ],
          "outputs": {
            "module_metadata": {
              "type": "object",
              "value": "[parameters('module_metadata')]"
            },
            "logAnalyticsPayGWorkspaceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', format('{0}-{1}-payGTier-{2}', parameters('logAnalyticsWorkspaceParams').workspaceName, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness))]"
            },
            "logAnalyticsPayGWorkspaceName": {
              "type": "string",
              "value": "[format('{0}-{1}-payGTier-{2}', parameters('logAnalyticsWorkspaceParams').workspaceName, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness)]"
            },
            "logAnalyticsCommitTierWorkspaceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', format('{0}-{1}-commitTier-{2}', parameters('logAnalyticsWorkspaceParams').workspaceName, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness))]"
            },
            "storeEventsCustomTableNamePrefix": {
              "type": "string",
              "value": "[format('{0}{1}', parameters('logAnalyticsWorkspaceParams').storeEventsCustomTableName, parameters('deploymentParams').global_uniqueness)]"
            },
            "storeEventsCustomTableName": {
              "type": "string",
              "value": "[format('{0}{1}_CL', parameters('logAnalyticsWorkspaceParams').storeEventsCustomTableName, parameters('deploymentParams').global_uniqueness)]"
            },
            "automationEventsCustomTableNamePrefix": {
              "type": "string",
              "value": "[format('{0}{1}', parameters('logAnalyticsWorkspaceParams').automationEventsCustomTableName, parameters('deploymentParams').global_uniqueness)]"
            },
            "automationEventsCustomTableName": {
              "type": "string",
              "value": "[format('{0}{1}_CL', parameters('logAnalyticsWorkspaceParams').automationEventsCustomTableName, parameters('deploymentParams').global_uniqueness)]"
            },
            "managedRunCmdCustomTableNamePrefix": {
              "type": "string",
              "value": "[format('{0}{1}', parameters('logAnalyticsWorkspaceParams').managedRunCmdCustomTableName, parameters('deploymentParams').global_uniqueness)]"
            },
            "managedRunCmdCustomTableName": {
              "type": "string",
              "value": "[format('{0}{1}_CL', parameters('logAnalyticsWorkspaceParams').managedRunCmdCustomTableName, parameters('deploymentParams').global_uniqueness)]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}_{1}_{2}_sa', parameters('storageAccountParams').storageAccountNamePrefix, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness)]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentParams": {
            "value": "[parameters('deploymentParams')]"
          },
          "storageAccountParams": {
            "value": "[parameters('storageAccountParams')]"
          },
          "funcParams": {
            "value": "[parameters('funcParams')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.18.4.5664",
              "templateHash": "9831604754677873911"
            }
          },
          "parameters": {
            "module_metadata": {
              "type": "object",
              "defaultValue": {
                "module_last_updated": "2023-05-26",
                "owner": "miztiik@github"
              }
            },
            "deploymentParams": {
              "type": "object"
            },
            "storageAccountParams": {
              "type": "object"
            },
            "funcParams": {
              "type": "object"
            },
            "tags": {
              "type": "object",
              "defaultValue": "[resourceGroup().tags]"
            }
          },
          "variables": {
            "uniqStr": "[substring(uniqueString(resourceGroup().id), 0, 6)]",
            "saName": "[format('{0}{1}{2}{3}', parameters('storageAccountParams').storageAccountNamePrefix, parameters('deploymentParams').loc_short_code, variables('uniqStr'), parameters('deploymentParams').global_uniqueness)]",
            "uniqStr_1": "[substring(uniqueString(resourceGroup().id), 0, 6)]",
            "saName_1": "[format('{0}{1}{2}', parameters('funcParams').funcStorageAccountNamePrefix, variables('uniqStr_1'), parameters('deploymentParams').global_uniqueness)]"
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2022-05-01",
              "name": "[variables('saName')]",
              "location": "[parameters('deploymentParams').location]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "[format('{0}', parameters('storageAccountParams').fault_tolerant_sku)]"
              },
              "kind": "[format('{0}', parameters('storageAccountParams').kind)]",
              "properties": {
                "minimumTlsVersion": "[format('{0}', parameters('storageAccountParams').minimumTlsVersion)]",
                "allowBlobPublicAccess": "[parameters('storageAccountParams').allowBlobPublicAccess]",
                "defaultToOAuthAuthentication": true,
                "supportsHttpsTrafficOnly": true,
                "networkAcls": {
                  "bypass": "AzureServices",
                  "defaultAction": "Allow"
                },
                "encryption": {
                  "services": {
                    "file": {
                      "keyType": "Account",
                      "enabled": true
                    },
                    "blob": {
                      "keyType": "Account",
                      "enabled": true
                    }
                  },
                  "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2022-05-01",
              "name": "[variables('saName_1')]",
              "location": "[parameters('deploymentParams').location]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "[format('{0}', parameters('storageAccountParams').fault_tolerant_sku)]"
              },
              "kind": "[format('{0}', parameters('storageAccountParams').kind)]",
              "properties": {
                "minimumTlsVersion": "[format('{0}', parameters('storageAccountParams').minimumTlsVersion)]",
                "allowBlobPublicAccess": "[parameters('storageAccountParams').allowBlobPublicAccess]",
                "defaultToOAuthAuthentication": true,
                "supportsHttpsTrafficOnly": true,
                "networkAcls": {
                  "bypass": "AzureServices",
                  "defaultAction": "Allow"
                },
                "encryption": {
                  "services": {
                    "file": {
                      "keyType": "Account",
                      "enabled": true
                    },
                    "blob": {
                      "keyType": "Account",
                      "enabled": true
                    }
                  },
                  "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
              }
            }
          ],
          "outputs": {
            "module_metadata": {
              "type": "object",
              "value": "[parameters('module_metadata')]"
            },
            "saName": {
              "type": "string",
              "value": "[variables('saName')]"
            },
            "saPrimaryEndpointsBlob": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('saName')), '2022-05-01').primaryEndpoints.blob]"
            },
            "saPrimaryEndpoints": {
              "type": "object",
              "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('saName')), '2022-05-01').primaryEndpoints]"
            },
            "saName_1": {
              "type": "string",
              "value": "[variables('saName_1')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}_{1}_{2}_blob', parameters('storageAccountParams').storageAccountNamePrefix, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness)]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentParams": {
            "value": "[parameters('deploymentParams')]"
          },
          "storageAccountParams": {
            "value": "[parameters('storageAccountParams')]"
          },
          "storageAccountName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}_{1}_{2}_sa', parameters('storageAccountParams').storageAccountNamePrefix, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness)), '2022-09-01').outputs.saName.value]"
          },
          "storageAccountName_1": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}_{1}_{2}_sa', parameters('storageAccountParams').storageAccountNamePrefix, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness)), '2022-09-01').outputs.saName_1.value]"
          },
          "logAnalyticsWorkspaceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}_{1}_{2}_la', parameters('logAnalyticsWorkspaceParams').workspaceName, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness)), '2022-09-01').outputs.logAnalyticsPayGWorkspaceId.value]"
          },
          "enableDiagnostics": {
            "value": false
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.18.4.5664",
              "templateHash": "15568782707485487793"
            }
          },
          "parameters": {
            "module_metadata": {
              "type": "object",
              "defaultValue": {
                "module_last_updated": "2023-05-23",
                "owner": "miztiik@github"
              }
            },
            "deploymentParams": {
              "type": "object"
            },
            "storageAccountParams": {
              "type": "object"
            },
            "storageAccountName": {
              "type": "string"
            },
            "enableDiagnostics": {
              "type": "bool",
              "defaultValue": false
            },
            "logAnalyticsWorkspaceId": {
              "type": "string"
            },
            "storageAccountName_1": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2021-06-01",
              "name": "[format('{0}/{1}', parameters('storageAccountName'), 'default')]",
              "properties": {
                "cors": {
                  "corsRules": []
                }
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2021-04-01",
              "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', format('{0}-blob-{1}', parameters('storageAccountParams').blobNamePrefix, parameters('deploymentParams').global_uniqueness))]",
              "properties": {
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
              ]
            },
            {
              "condition": "[parameters('enableDiagnostics')]",
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAccountName'))]",
              "name": "[format('{0}-Diaglogs', parameters('storageAccountName'))]",
              "properties": {
                "workspaceId": "[parameters('logAnalyticsWorkspaceId')]",
                "logs": [
                  {
                    "category": "StorageWrite",
                    "enabled": true
                  }
                ],
                "metrics": [
                  {
                    "category": "Transaction",
                    "enabled": true
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2021-06-01",
              "name": "[format('{0}/{1}', parameters('storageAccountName_1'), 'default')]",
              "properties": {
                "cors": {
                  "corsRules": []
                }
              }
            }
          ],
          "outputs": {
            "module_metadata": {
              "type": "object",
              "value": "[parameters('module_metadata')]"
            },
            "blobContainerId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', parameters('storageAccountName'), 'default', format('{0}-blob-{1}', parameters('storageAccountParams').blobNamePrefix, parameters('deploymentParams').global_uniqueness))]"
            },
            "blobContainerName": {
              "type": "string",
              "value": "[format('{0}-blob-{1}', parameters('storageAccountParams').blobNamePrefix, parameters('deploymentParams').global_uniqueness)]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('{0}_{1}_{2}_la', parameters('logAnalyticsWorkspaceParams').workspaceName, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness))]",
        "[resourceId('Microsoft.Resources/deployments', format('{0}_{1}_{2}_sa', parameters('storageAccountParams').storageAccountNamePrefix, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}_{1}_{2}_fn_app', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness)]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentParams": {
            "value": "[parameters('deploymentParams')]"
          },
          "uami_name_func": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}_{1}_{2}_uami', parameters('deploymentParams').enterprise_name_suffix, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness)), '2022-09-01').outputs.uami_name_func.value]"
          },
          "funcParams": {
            "value": "[parameters('funcParams')]"
          },
          "funcSaName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}_{1}_{2}_sa', parameters('storageAccountParams').storageAccountNamePrefix, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness)), '2022-09-01').outputs.saName_1.value]"
          },
          "logAnalyticsWorkspaceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}_{1}_{2}_la', parameters('logAnalyticsWorkspaceParams').workspaceName, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness)), '2022-09-01').outputs.logAnalyticsPayGWorkspaceId.value]"
          },
          "enableDiagnostics": {
            "value": true
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "saName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}_{1}_{2}_sa', parameters('storageAccountParams').storageAccountNamePrefix, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness)), '2022-09-01').outputs.saName.value]"
          },
          "blobContainerName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}_{1}_{2}_blob', parameters('storageAccountParams').storageAccountNamePrefix, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness)), '2022-09-01').outputs.blobContainerName.value]"
          },
          "cosmos_db_accnt_name": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}_{1}_{2}_cosmos_db', parameters('cosmosDbParams').cosmosDbNamePrefix, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness)), '2022-09-01').outputs.cosmos_db_accnt_name.value]"
          },
          "cosmos_db_name": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}_{1}_{2}_cosmos_db', parameters('cosmosDbParams').cosmosDbNamePrefix, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness)), '2022-09-01').outputs.cosmos_db_name.value]"
          },
          "cosmos_db_container_name": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}_{1}_{2}_cosmos_db', parameters('cosmosDbParams').cosmosDbNamePrefix, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness)), '2022-09-01').outputs.cosmos_db_container_name.value]"
          },
          "svc_bus_ns_name": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}_{1}_{2}_svc_bus', parameters('serviceBusParams').serviceBusNamePrefix, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness)), '2022-09-01').outputs.svc_bus_ns_name.value]"
          },
          "svc_bus_q_name": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}_{1}_{2}_svc_bus', parameters('serviceBusParams').serviceBusNamePrefix, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness)), '2022-09-01').outputs.svc_bus_q_name.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.18.4.5664",
              "templateHash": "5771591256193204120"
            }
          },
          "parameters": {
            "module_metadata": {
              "type": "object",
              "defaultValue": {
                "module_last_updated": "2023-05-20",
                "owner": "miztiik@github"
              }
            },
            "deploymentParams": {
              "type": "object"
            },
            "funcParams": {
              "type": "object"
            },
            "tags": {
              "type": "object"
            },
            "logAnalyticsWorkspaceId": {
              "type": "string"
            },
            "enableDiagnostics": {
              "type": "bool",
              "defaultValue": true
            },
            "uami_name_func": {
              "type": "string"
            },
            "saName": {
              "type": "string"
            },
            "funcSaName": {
              "type": "string"
            },
            "blobContainerName": {
              "type": "string"
            },
            "svc_bus_ns_name": {
              "type": "string"
            },
            "svc_bus_q_name": {
              "type": "string"
            },
            "cosmos_db_accnt_name": {
              "type": "string"
            },
            "cosmos_db_name": {
              "type": "string"
            },
            "cosmos_db_container_name": {
              "type": "string"
            }
          },
          "variables": {
            "r_fn_app_name": "[replace(format('{0}-{1}-{2}-fn-app-{3}', parameters('deploymentParams').enterprise_name_suffix, parameters('funcParams').funcAppPrefix, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness), '_', '-')]",
            "storageBlobDataContributor_RoleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
            "cosmosDbDataContributor_RoleDefinitionId": "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions', parameters('cosmos_db_accnt_name'), '00000000-0000-0000-0000-000000000002')]",
            "svcBusRoleId": "090c5cfd-751d-490a-894a-3ce6f1109419",
            "event_hub_owner_role_id": "f526a384-b230-433a-b45c-95f59c4a2dec"
          },
          "resources": [
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2022-03-01",
              "name": "[format('{0}-fn-plan-{1}', parameters('funcParams').funcAppPrefix, parameters('deploymentParams').global_uniqueness)]",
              "location": "[parameters('deploymentParams').location]",
              "tags": "[parameters('tags')]",
              "kind": "linux",
              "sku": {
                "name": "[parameters('funcParams').skuName]",
                "tier": "[parameters('funcParams').funcHostingPlanTier]",
                "family": "Y"
              },
              "properties": {
                "reserved": true
              }
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2021-03-01",
              "name": "[variables('r_fn_app_name')]",
              "location": "[parameters('deploymentParams').location]",
              "kind": "functionapp,linux",
              "tags": "[parameters('tags')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('uami_name_func')))]": {}
                }
              },
              "properties": {
                "enabled": true,
                "reserved": true,
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('{0}-fn-plan-{1}', parameters('funcParams').funcAppPrefix, parameters('deploymentParams').global_uniqueness))]",
                "clientAffinityEnabled": true,
                "httpsOnly": true,
                "siteConfig": {
                  "linuxFxVersion": "Python|3.10",
                  "ftpsState": "Disabled",
                  "minTlsVersion": "1.2"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/components', format('{0}-fnAppInsights-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness))]",
                "[resourceId('Microsoft.Web/serverfarms', format('{0}-fn-plan-{1}', parameters('funcParams').funcAppPrefix, parameters('deploymentParams').global_uniqueness))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2021-03-01",
              "name": "[format('{0}/{1}', variables('r_fn_app_name'), 'appsettings')]",
              "properties": {
                "AzureWebJobsStorage": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', parameters('funcSaName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('funcSaName')), '2021-06-01').keys[0].value)]",
                "AzureFunctionsJobHost__logging__LogLevel__Default": "[parameters('funcParams').funcLogLevel]",
                "FUNCTION_APP_EDIT_MODE": "readwrite",
                "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', parameters('funcSaName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('funcSaName')), '2021-06-01').keys[0].value)]",
                "WEBSITE_CONTENTSHARE": "[toLower(parameters('funcParams').funcNamePrefix)]",
                "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.Insights/components', format('{0}-fnAppInsights-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness)), '2020-02-02').InstrumentationKey]",
                "FUNCTIONS_WORKER_RUNTIME": "python",
                "FUNCTIONS_EXTENSION_VERSION": "~4",
                "WAREHOUSE_STORAGE": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', parameters('saName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('saName')), '2021-06-01').keys[0].value)]",
                "WAREHOUSE_STORAGE_CONTAINER": "[parameters('blobContainerName')]",
                "AZURE_CLIENT_ID": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('uami_name_func')), '2023-01-31').clientId]",
                "SA_CONNECTION__accountName": "[parameters('saName')]",
                "SA_CONNECTION__clientId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('uami_name_func')), '2023-01-31').clientId]",
                "SA_CONNECTION__credential": "managedidentity",
                "SA_CONNECTION__serviceUri": "[format('https://{0}.blob.{1}', parameters('saName'), environment().suffixes.storage)]",
                "SA_CONNECTION__blobServiceUri": "[format('https://{0}.blob.{1}', parameters('saName'), environment().suffixes.storage)]",
                "BLOB_SVC_ACCOUNT_URL": "[reference(resourceId('Microsoft.Storage/storageAccounts', parameters('saName')), '2021-06-01').primaryEndpoints.blob]",
                "SA_NAME": "[parameters('saName')]",
                "BLOB_NAME": "[parameters('blobContainerName')]",
                "SVC_BUS_CONNECTION__fullyQualifiedNamespace": "[format('{0}.servicebus.windows.net', parameters('svc_bus_ns_name'))]",
                "SVC_BUS_CONNECTION__credential": "managedidentity",
                "SVC_BUS_CONNECTION__clientId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('uami_name_func')), '2023-01-31').clientId]",
                "SVC_BUS_FQDN": "[format('{0}.servicebus.windows.net', parameters('svc_bus_ns_name'))]",
                "SVC_BUS_Q_NAME": "[parameters('svc_bus_q_name')]",
                "COSMOS_DB_CONNECTION__accountEndpoint": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmos_db_accnt_name')), '2022-08-15').documentEndpoint]",
                "COSMOS_DB_CONNECTION__credential": "managedidentity",
                "COSMOS_DB_CONNECTION__clientId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('uami_name_func')), '2023-01-31').clientId]",
                "COSMOS_DB_URL": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmos_db_accnt_name')), '2022-08-15').documentEndpoint]",
                "COSMOS_DB_NAME": "[parameters('cosmos_db_name')]",
                "COSMOS_DB_CONTAINER_NAME": "[parameters('cosmos_db_container_name')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/components', format('{0}-fnAppInsights-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness))]",
                "[resourceId('Microsoft.Web/sites', variables('r_fn_app_name'))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2021-03-01",
              "name": "[format('{0}/{1}', variables('r_fn_app_name'), 'logs')]",
              "properties": {
                "applicationLogs": {
                  "azureBlobStorage": {
                    "level": "Error",
                    "retentionInDays": 10
                  }
                },
                "httpLogs": {
                  "fileSystem": {
                    "retentionInMb": 100,
                    "enabled": true
                  }
                },
                "detailedErrorMessages": {
                  "enabled": true
                },
                "failedRequestsTracing": {
                  "enabled": true
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('r_fn_app_name'))]",
                "[resourceId('Microsoft.Web/sites/config', variables('r_fn_app_name'), 'appsettings')]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-10-01-preview",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}/blobServices/{1}/containers/{2}', split(format('{0}/default/{1}', parameters('saName'), parameters('blobContainerName')), '/')[0], split(format('{0}/default/{1}', parameters('saName'), parameters('blobContainerName')), '/')[1], split(format('{0}/default/{1}', parameters('saName'), parameters('blobContainerName')), '/')[2])]",
              "name": "[guid('r_storageBlobDataContributorRoleAssignment', resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', split(format('{0}/default/{1}', parameters('saName'), parameters('blobContainerName')), '/')[0], split(format('{0}/default/{1}', parameters('saName'), parameters('blobContainerName')), '/')[1], split(format('{0}/default/{1}', parameters('saName'), parameters('blobContainerName')), '/')[2]), variables('storageBlobDataContributor_RoleDefinitionId'))]",
              "properties": {
                "roleDefinitionId": "[variables('storageBlobDataContributor_RoleDefinitionId')]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('uami_name_func')), '2023-01-31').principalId]",
                "principalType": "ServicePrincipal"
              }
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleAssignments",
              "apiVersion": "2021-04-15",
              "name": "[format('{0}/{1}', parameters('cosmos_db_accnt_name'), guid(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('uami_name_func')), resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmos_db_accnt_name')), variables('cosmosDbDataContributor_RoleDefinitionId'), resourceId('Microsoft.Storage/storageAccounts', parameters('saName'))))]",
              "properties": {
                "roleDefinitionId": "[variables('cosmosDbDataContributor_RoleDefinitionId')]",
                "scope": "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmos_db_accnt_name'))]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('uami_name_func')), '2023-01-31').principalId]"
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.ServiceBus/namespaces/{0}', parameters('svc_bus_ns_name'))]",
              "name": "[guid('r_attach_svc_bus_owner_perms_to_tole', resourceId('Microsoft.Web/sites', variables('r_fn_app_name')), variables('svcBusRoleId'))]",
              "properties": {
                "description": "Azure Service Owner Permission to Service Bus Namespace scope",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('svcBusRoleId'))]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('uami_name_func')), '2023-01-31').principalId]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('r_fn_app_name'))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid('r_attach_event_hub_owner_perms_to_tole', resourceId('Microsoft.Web/sites', variables('r_fn_app_name')), variables('event_hub_owner_role_id'))]",
              "properties": {
                "description": "Azure Event Hub Owner Permission to Event Hub Namespace scope",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('event_hub_owner_role_id'))]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('uami_name_func')), '2023-01-31').principalId]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('r_fn_app_name'))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/hostNameBindings",
              "apiVersion": "2022-03-01",
              "name": "[format('{0}/{1}', variables('r_fn_app_name'), format('{0}.azurewebsites.net', variables('r_fn_app_name')))]",
              "properties": {
                "siteName": "[variables('r_fn_app_name')]",
                "hostNameType": "Verified"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('r_fn_app_name'))]"
              ]
            },
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[format('{0}-fnAppInsights-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness)]",
              "location": "[parameters('deploymentParams').location]",
              "tags": "[parameters('tags')]",
              "kind": "web",
              "properties": {
                "Application_Type": "web",
                "Request_Source": "rest",
                "WorkspaceResourceId": "[parameters('logAnalyticsWorkspaceId')]",
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
              }
            },
            {
              "condition": "[parameters('enableDiagnostics')]",
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Web/sites/{0}', variables('r_fn_app_name'))]",
              "name": "[format('{0}-logs-{1}', parameters('funcParams').funcNamePrefix, parameters('deploymentParams').global_uniqueness)]",
              "properties": {
                "workspaceId": "[parameters('logAnalyticsWorkspaceId')]",
                "logs": [
                  {
                    "category": "FunctionAppLogs",
                    "enabled": true
                  }
                ],
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('r_fn_app_name'))]"
              ]
            }
          ],
          "outputs": {
            "module_metadata": {
              "type": "object",
              "value": "[parameters('module_metadata')]"
            },
            "fn_app_name": {
              "type": "string",
              "value": "[variables('r_fn_app_name')]"
            },
            "fn_app_url": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/sites', variables('r_fn_app_name')), '2021-03-01').defaultHostName]"
            },
            "fn_url": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/sites', variables('r_fn_app_name')), '2021-03-01').defaultHostName]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('{0}_{1}_{2}_blob', parameters('storageAccountParams').storageAccountNamePrefix, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness))]",
        "[resourceId('Microsoft.Resources/deployments', format('{0}_{1}_{2}_cosmos_db', parameters('cosmosDbParams').cosmosDbNamePrefix, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness))]",
        "[resourceId('Microsoft.Resources/deployments', format('{0}_{1}_{2}_la', parameters('logAnalyticsWorkspaceParams').workspaceName, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness))]",
        "[resourceId('Microsoft.Resources/deployments', format('{0}_{1}_{2}_sa', parameters('storageAccountParams').storageAccountNamePrefix, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness))]",
        "[resourceId('Microsoft.Resources/deployments', format('{0}_{1}_{2}_svc_bus', parameters('serviceBusParams').serviceBusNamePrefix, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness))]",
        "[resourceId('Microsoft.Resources/deployments', format('{0}_{1}_{2}_uami', parameters('deploymentParams').enterprise_name_suffix, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}_{1}_{2}_svc_bus', parameters('serviceBusParams').serviceBusNamePrefix, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness)]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentParams": {
            "value": "[parameters('deploymentParams')]"
          },
          "serviceBusParams": {
            "value": "[parameters('serviceBusParams')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.18.4.5664",
              "templateHash": "1658621604369142532"
            }
          },
          "parameters": {
            "module_metadata": {
              "type": "object",
              "defaultValue": {
                "module_last_updated": "2023-05-19",
                "owner": "miztiik@github"
              }
            },
            "deploymentParams": {
              "type": "object"
            },
            "serviceBusParams": {
              "type": "object"
            },
            "tags": {
              "type": "object"
            }
          },
          "variables": {
            "svc_bus_name": "[replace(format('{0}-{1}-svc-bus-ns-{2}-{3}', parameters('serviceBusParams').serviceBusNamePrefix, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').enterprise_name_suffix, parameters('deploymentParams').global_uniqueness), '_', '-')]"
          },
          "resources": [
            {
              "type": "Microsoft.ServiceBus/namespaces",
              "apiVersion": "2022-01-01-preview",
              "name": "[variables('svc_bus_name')]",
              "location": "[parameters('deploymentParams').location]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "Standard"
              },
              "properties": {}
            },
            {
              "type": "Microsoft.ServiceBus/namespaces/queues",
              "apiVersion": "2022-01-01-preview",
              "name": "[format('{0}/{1}', variables('svc_bus_name'), format('{0}-q-{1}', parameters('serviceBusParams').serviceBusNamePrefix, parameters('deploymentParams').global_uniqueness))]",
              "properties": {
                "lockDuration": "PT5M",
                "maxSizeInMegabytes": 1024,
                "requiresDuplicateDetection": false,
                "requiresSession": false,
                "deadLetteringOnMessageExpiration": false,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "maxDeliveryCount": 5,
                "enablePartitioning": false,
                "enableExpress": false
              },
              "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', variables('svc_bus_name'))]"
              ]
            }
          ],
          "outputs": {
            "module_metadata": {
              "type": "object",
              "value": "[parameters('module_metadata')]"
            },
            "svc_bus_ns_name": {
              "type": "string",
              "value": "[variables('svc_bus_name')]"
            },
            "svc_bus_q_name": {
              "type": "string",
              "value": "[format('{0}-q-{1}', parameters('serviceBusParams').serviceBusNamePrefix, parameters('deploymentParams').global_uniqueness)]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}_{1}_{2}_data_factory', parameters('data_factory_params').name_prefix, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness)]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentParams": {
            "value": "[parameters('deploymentParams')]"
          },
          "data_factory_params": {
            "value": "[parameters('data_factory_params')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "uami_data_factory": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}_{1}_{2}_uami', parameters('deploymentParams').enterprise_name_suffix, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness)), '2022-09-01').outputs.uami_data_factory.value]"
          },
          "logAnalyticsWorkspaceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}_{1}_{2}_la', parameters('logAnalyticsWorkspaceParams').workspaceName, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness)), '2022-09-01').outputs.logAnalyticsPayGWorkspaceId.value]"
          },
          "saName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}_{1}_{2}_sa', parameters('storageAccountParams').storageAccountNamePrefix, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness)), '2022-09-01').outputs.saName.value]"
          },
          "blobContainerName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}_{1}_{2}_blob', parameters('storageAccountParams').storageAccountNamePrefix, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness)), '2022-09-01').outputs.blobContainerName.value]"
          },
          "cosmos_db_accnt_name": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}_{1}_{2}_cosmos_db', parameters('cosmosDbParams').cosmosDbNamePrefix, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness)), '2022-09-01').outputs.cosmos_db_accnt_name.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.18.4.5664",
              "templateHash": "5112527014489221904"
            }
          },
          "parameters": {
            "module_metadata": {
              "type": "object",
              "defaultValue": {
                "module_last_updated": "2023-05-23",
                "owner": "miztiik@github"
              }
            },
            "deploymentParams": {
              "type": "object"
            },
            "data_factory_params": {
              "type": "object"
            },
            "tags": {
              "type": "object"
            },
            "logAnalyticsWorkspaceId": {
              "type": "string"
            },
            "uami_data_factory": {
              "type": "string"
            },
            "saName": {
              "type": "string"
            },
            "blobContainerName": {
              "type": "string"
            },
            "cosmos_db_accnt_name": {
              "type": "string"
            }
          },
          "variables": {
            "data_factory_name": "[replace(format('{0}-{1}-data-factory-{2}-{3}', parameters('data_factory_params').name_prefix, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').enterprise_name_suffix, parameters('deploymentParams').global_uniqueness), '_', '-')]",
            "cosmosDbDataContributor_RoleDefinitionId": "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions', parameters('cosmos_db_accnt_name'), '00000000-0000-0000-0000-000000000002')]",
            "builtInRoleNames": [
              {
                "name": "Owner",
                "id": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]"
              },
              {
                "name": "Contributor",
                "id": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]"
              },
              {
                "name": "Reader",
                "id": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]"
              },
              {
                "name": "Storage Blob Data Contributor",
                "id": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]"
              },
              {
                "name": "Azure Service Bus Data Owner",
                "id": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '090c5cfd-751d-490a-894a-3ce6f1109419')]"
              },
              {
                "name": "Azure Sentinel Automation Contributor",
                "id": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'f4c81013-99ee-4d62-a7ee-b3f1f648599a')]"
              },
              {
                "name": "Log Analytics Contributor",
                "id": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '92aaf0da-9dab-42b6-94a3-d43ce8d16293')]"
              },
              {
                "name": "Data Factory Contributor",
                "id": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '673868aa-7521-48a0-acc6-0f60742d39f5')]"
              },
              {
                "name": "Logic App Contributor",
                "id": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '87a39d53-fc1b-424a-814c-f7e04687dc9e')]"
              },
              {
                "name": "Logic App Operator",
                "id": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '515c2055-d9d4-4321-b1b9-bd0c9a0f79fe')]"
              },
              {
                "name": "Managed Application Contributor Role",
                "id": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '641177b8-a67a-45b9-a033-47bc880bb21e')]"
              },
              {
                "name": "Managed Application Operator Role",
                "id": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'c7393b34-138c-406f-901b-d8cf2b17e6ae')]"
              },
              {
                "name": "Managed Applications Reader",
                "id": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b9331d33-8a36-4f8c-b097-4f54124fdb44')]"
              },
              {
                "name": "Monitoring Contributor",
                "id": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '749f88d5-cbae-40b8-bcfc-e573ddc772fa')]"
              },
              {
                "name": "Monitoring Metrics Publisher",
                "id": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '3913510d-42f4-4e42-8a64-420c390055eb')]"
              },
              {
                "name": "Monitoring Reader",
                "id": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '43d0d8ad-25c7-4714-9337-8ba259a9fe05')]"
              },
              {
                "name": "Resource Policy Contributor",
                "id": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '36243c78-bf99-498c-9df9-86d9f8d28608')]"
              },
              {
                "name": "User Access Administrator",
                "id": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '18d7d88d-d35e-4fb5-a5c3-7773c20a72d9')]"
              }
            ]
          },
          "resources": [
            {
              "type": "Microsoft.DataFactory/factories",
              "apiVersion": "2018-06-01",
              "name": "[variables('data_factory_name')]",
              "tags": "[parameters('tags')]",
              "location": "[parameters('deploymentParams').location]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('uami_data_factory')))]": {}
                }
              }
            },
            {
              "type": "Microsoft.DataFactory/factories/linkedservices",
              "apiVersion": "2018-06-01",
              "name": "[format('{0}/{1}', variables('data_factory_name'), format('{0}_link_to_sa', variables('data_factory_name')))]",
              "properties": {
                "type": "AzureBlobStorage",
                "description": "Miztiik Link to Azure Storage Account",
                "typeProperties": {
                  "serviceEndpoint": "[format('https://{0}.blob.{1}', parameters('saName'), environment().suffixes.storage)]",
                  "azureCloudType": "AzurePublic",
                  "accountKind": "StorageV2",
                  "credential": {
                    "referenceName": "[parameters('uami_data_factory')]",
                    "type": "CredentialReference"
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DataFactory/factories', variables('data_factory_name'))]",
                "[resourceId('Microsoft.DataFactory/factories/credentials', variables('data_factory_name'), parameters('uami_data_factory'))]"
              ]
            },
            {
              "type": "Microsoft.DataFactory/factories/datasets",
              "apiVersion": "2018-06-01",
              "name": "[format('{0}/{1}', variables('data_factory_name'), 'data_set_store_events_in')]",
              "properties": {
                "linkedServiceName": {
                  "referenceName": "[format('{0}_link_to_sa', variables('data_factory_name'))]",
                  "type": "LinkedServiceReference"
                },
                "type": "Json",
                "typeProperties": {
                  "location": {
                    "type": "AzureBlobStorageLocation",
                    "container": "[parameters('blobContainerName')]",
                    "folderPath": "store_events/raw",
                    "fileName": "*.json"
                  }
                },
                "schema": [
                  {
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "name": "store_id",
                    "type": "integer"
                  },
                  {
                    "name": "store_fqdn",
                    "type": "string"
                  },
                  {
                    "name": "store_ip",
                    "type": "string"
                  },
                  {
                    "name": "cust_id",
                    "type": "integer"
                  },
                  {
                    "name": "category",
                    "type": "string"
                  },
                  {
                    "name": "sku",
                    "type": "integer"
                  },
                  {
                    "name": "price",
                    "type": "number"
                  },
                  {
                    "name": "qty",
                    "type": "integer"
                  },
                  {
                    "name": "discount",
                    "type": "integer"
                  },
                  {
                    "name": "gift_wrap",
                    "type": "boolean"
                  },
                  {
                    "name": "variant",
                    "type": "string"
                  },
                  {
                    "name": "priority_shipping",
                    "type": "boolean"
                  },
                  {
                    "name": "payment_method",
                    "type": "string"
                  },
                  {
                    "name": "ts",
                    "type": "string"
                  },
                  {
                    "name": "contact_me",
                    "type": "string"
                  },
                  {
                    "name": "is_return",
                    "type": "boolean"
                  },
                  {
                    "name": "event_type",
                    "type": "string"
                  },
                  {
                    "name": "dt",
                    "type": "string"
                  },
                  {
                    "name": "bad_msg",
                    "type": "boolean"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.DataFactory/factories', variables('data_factory_name'))]",
                "[resourceId('Microsoft.DataFactory/factories/linkedservices', variables('data_factory_name'), format('{0}_link_to_sa', variables('data_factory_name')))]"
              ]
            },
            {
              "type": "Microsoft.DataFactory/factories/datasets",
              "apiVersion": "2018-06-01",
              "name": "[format('{0}/{1}', variables('data_factory_name'), 'data_set_store_events_out')]",
              "properties": {
                "linkedServiceName": {
                  "referenceName": "[format('{0}_link_to_sa', variables('data_factory_name'))]",
                  "type": "LinkedServiceReference"
                },
                "type": "Parquet",
                "typeProperties": {
                  "location": {
                    "type": "AzureBlobStorageLocation",
                    "container": "[parameters('blobContainerName')]",
                    "folderPath": "output"
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DataFactory/factories', variables('data_factory_name'))]",
                "[resourceId('Microsoft.DataFactory/factories/linkedservices', variables('data_factory_name'), format('{0}_link_to_sa', variables('data_factory_name')))]"
              ]
            },
            {
              "type": "Microsoft.DataFactory/factories/pipelines",
              "apiVersion": "2018-06-01",
              "name": "[format('{0}/{1}', variables('data_factory_name'), format('{0}-pipeline', variables('data_factory_name')))]",
              "properties": {
                "activities": [
                  {
                    "name": "MiztiikDataProcessorActivity",
                    "type": "Copy",
                    "typeProperties": {
                      "source": {
                        "type": "BinarySource",
                        "storeSettings": {
                          "type": "AzureBlobStorageReadSettings",
                          "recursive": true
                        }
                      },
                      "sink": {
                        "type": "BinarySink",
                        "storeSettings": {
                          "type": "AzureBlobStorageWriteSettings"
                        }
                      },
                      "enableStaging": false
                    },
                    "inputs": [
                      {
                        "referenceName": "data_set_store_events_in",
                        "type": "DatasetReference"
                      }
                    ],
                    "outputs": [
                      {
                        "referenceName": "data_set_store_events_out",
                        "type": "DatasetReference"
                      }
                    ]
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.DataFactory/factories', variables('data_factory_name'))]",
                "[resourceId('Microsoft.DataFactory/factories/datasets', variables('data_factory_name'), 'data_set_store_events_in')]",
                "[resourceId('Microsoft.DataFactory/factories/datasets', variables('data_factory_name'), 'data_set_store_events_out')]"
              ]
            },
            {
              "type": "Microsoft.DataFactory/factories/credentials",
              "apiVersion": "2018-06-01",
              "name": "[format('{0}/{1}', variables('data_factory_name'), parameters('uami_data_factory'))]",
              "properties": {
                "type": "ManagedIdentity",
                "typeProperties": {
                  "resourceId": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('uami_data_factory'))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DataFactory/factories', variables('data_factory_name'))]"
              ]
            },
            {
              "type": "Microsoft.DataFactory/factories/dataflows",
              "apiVersion": "2018-06-01",
              "name": "[format('{0}/{1}', variables('data_factory_name'), 'DailyStoreAggregatesSales')]",
              "properties": {
                "type": "MappingDataFlow",
                "typeProperties": {
                  "sources": [
                    {
                      "dataset": {
                        "referenceName": "data_set_store_events_in",
                        "type": "DatasetReference"
                      },
                      "name": "storeEventsRaw",
                      "description": "Raw Events for all stores"
                    }
                  ],
                  "sinks": [
                    {
                      "dataset": {
                        "referenceName": "data_set_store_events_out",
                        "type": "DatasetReference"
                      },
                      "name": "storeEventsProcessed",
                      "description": "Processed events all stores"
                    }
                  ],
                  "transformations": [
                    {
                      "name": "notNULLstoreid",
                      "description": "Removing records without store id"
                    },
                    {
                      "name": "saleRevenue",
                      "description": "Revenue for that event computed for qty, price and discount"
                    }
                  ],
                  "scriptLines": [
                    "source(output(",
                    "\t\tid as string,",
                    "\t\tstore_id as integer,",
                    "\t\tstore_fqdn as string,",
                    "\t\tstore_ip as string,",
                    "\t\tcust_id as integer,",
                    "\t\tcategory as string,",
                    "\t\tsku as integer,",
                    "\t\tprice as double,",
                    "\t\tqty as integer,",
                    "\t\tdiscount as integer,",
                    "\t\tgift_wrap as boolean,",
                    "\t\tvariant as string,",
                    "\t\tpriority_shipping as boolean,",
                    "\t\tpayment_method as string,",
                    "\t\tts as string,",
                    "\t\tcontact_me as string,",
                    "\t\tis_return as boolean,",
                    "\t\tevent_type as string,",
                    "\t\tdt as string,",
                    "\t\tbad_msg as boolean",
                    "\t),",
                    "\tallowSchemaDrift: true,",
                    "\tvalidateSchema: false,",
                    "\tignoreNoFilesFound: false,",
                    "\tdocumentForm: 'singleDocument') ~> stagedData",
                    "stagedData filter(!isNull(store_id)) ~> notNULLstoreid",
                    "notNULLstoreid derive(sale_revenue = qty*price*(discount/100)) ~> saleRevenue",
                    "saleRevenue sink(allowSchemaDrift: true,",
                    "\tvalidateSchema: false,",
                    "\tformat: 'parquet',",
                    "\tskipDuplicateMapInputs: true,",
                    "\tskipDuplicateMapOutputs: true) ~> storeEventsProcessed"
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DataFactory/factories', variables('data_factory_name'))]",
                "[resourceId('Microsoft.DataFactory/factories/datasets', variables('data_factory_name'), 'data_set_store_events_in')]",
                "[resourceId('Microsoft.DataFactory/factories/datasets', variables('data_factory_name'), 'data_set_store_events_out')]"
              ]
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleAssignments",
              "apiVersion": "2021-04-15",
              "name": "[format('{0}/{1}', parameters('cosmos_db_accnt_name'), guid(resourceId('Microsoft.DataFactory/factories', variables('data_factory_name')), resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmos_db_accnt_name')), variables('cosmosDbDataContributor_RoleDefinitionId'), resourceId('Microsoft.Storage/storageAccounts', parameters('saName'))))]",
              "properties": {
                "roleDefinitionId": "[variables('cosmosDbDataContributor_RoleDefinitionId')]",
                "scope": "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmos_db_accnt_name'))]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('uami_data_factory')), '2023-01-31').principalId]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DataFactory/factories', variables('data_factory_name'))]"
              ],
              "metadata": {
                "description": "Assign the Cosmos Data Plane Owner role to the user-assigned managed identity"
              }
            },
            {
              "copy": {
                "name": "roleAssignment",
                "count": "[length(variables('builtInRoleNames'))]"
              },
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "name": "[guid(resourceId('Microsoft.DataFactory/factories', variables('data_factory_name')), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('uami_data_factory')), variables('builtInRoleNames')[copyIndex()].name)]",
              "properties": {
                "roleDefinitionId": "[variables('builtInRoleNames')[copyIndex()].id]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('uami_data_factory')), '2023-01-31').principalId]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DataFactory/factories', variables('data_factory_name'))]"
              ],
              "metadata": {
                "description": "Assign the Permissions to Role"
              }
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.DataFactory/factories/{0}', variables('data_factory_name'))]",
              "name": "[format('{0}_diag', variables('data_factory_name'))]",
              "properties": {
                "workspaceId": "[parameters('logAnalyticsWorkspaceId')]",
                "logs": [
                  {
                    "categoryGroup": "allLogs",
                    "enabled": true,
                    "retentionPolicy": {
                      "days": 90,
                      "enabled": true
                    }
                  }
                ],
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "timeGrain": "PT5M",
                    "enabled": true,
                    "retentionPolicy": {
                      "enabled": false,
                      "days": 0
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.DataFactory/factories', variables('data_factory_name'))]"
              ]
            }
          ],
          "outputs": {
            "module_metadata": {
              "type": "object",
              "value": "[parameters('module_metadata')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('{0}_{1}_{2}_blob', parameters('storageAccountParams').storageAccountNamePrefix, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness))]",
        "[resourceId('Microsoft.Resources/deployments', format('{0}_{1}_{2}_cosmos_db', parameters('cosmosDbParams').cosmosDbNamePrefix, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness))]",
        "[resourceId('Microsoft.Resources/deployments', format('{0}_{1}_{2}_la', parameters('logAnalyticsWorkspaceParams').workspaceName, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness))]",
        "[resourceId('Microsoft.Resources/deployments', format('{0}_{1}_{2}_sa', parameters('storageAccountParams').storageAccountNamePrefix, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness))]",
        "[resourceId('Microsoft.Resources/deployments', format('{0}_{1}_{2}_uami', parameters('deploymentParams').enterprise_name_suffix, parameters('deploymentParams').loc_short_code, parameters('deploymentParams').global_uniqueness))]"
      ]
    }
  ]
}